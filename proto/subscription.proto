// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package subscription;

import "id.proto";

option go_package = "github.com/PawelKowalski99/gardener_project/grpc/proto/subscription_service";


// Interface exported by the server.
service SubscriptionService {
  // A simple RPC.
  //
  // Obtains the feature at a given position.
  //
  // A feature with an empty name is returned if there's no feature at the given
  // position.

  rpc CreateSubscription(Subscription) returns (Subscription) {}

  rpc GetSubscription(ID) returns (Subscription) {}

  // A server-to-client streaming RPC.
  //
  // Obtains the Features available within the given Rectangle.  Results are
  // streamed rather than returned at once (e.g. in a response message with a
  // repeated field), as the rectangle may cover a large area and contain a
  // huge number of features.
  // A client-to-server streaming RPC.
  //
  // Accepts a stream of Points on a route being traversed, returning a
  // RouteSummary when traversal is completed.
//   rpc UpdateUser(UpdateUserRequest) returns (User) {}

  // A Bidirectional streaming RPC.
  //
  // Accepts a stream of RouteNotes sent while a route is being traversed,
  // while receiving other RouteNotes (e.g. from other users).
  rpc DeleteSubscription(ID) returns (Subscription) {}
}

message Subscription {
    ID id = 1;
    ID user_id = 2;
    string name = 3;
}

message ID {
  int32 id = 1;
}


// message UpdateUserRequest {
//     User user = 1;
//     google.protobuf.FieldMask update_mask = 2;
// }